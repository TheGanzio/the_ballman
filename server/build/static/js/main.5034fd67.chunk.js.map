{"version":3,"sources":["components/Post.js","App.js","reducers/posts.js","reducers/genres.js","reducers/index.js","store.js","index.js"],"names":["Post","title","description","authorName","preDescription","image","url","time","readNext","Item","Image","src","Content","Header","as","href","Description","Extra","Label","icon","content","App","props","setPosts","this","axios","get","then","data","console","log","catch","fetchPostsHromadske","genre","s","items","posts","Container","class","className","genreText","onClick","changeGenre","fetchPostsUnian","fetchPostsKoresp","fetchPostsKorona","fetchPostsExpert","Group","divided","map","key","substring","Component","connect","loading","dispatch","type","payload","setStat","statData","initialState","rootReducers","combineReducers","state","action","store","createStore","applyMiddleware","logger","render","document","getElementById"],"mappings":"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","file":"static/js/main.5034fd67.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Item, Label, Link } from 'semantic-ui-react';\r\n\r\nconst Post = ({ title, description, preDescription, authorName, image, url, time, readNext }) => {\r\n  return (\r\n    <Item>\r\n      <Item.Image src={image} />\r\n      <Item.Content>\r\n        <Item.Header as='a' href={url}>{title}</Item.Header>\r\n        <Item.Description>{description}<Item.Description as='a' href={url}>{readNext}</Item.Description></Item.Description>\r\n        <Item.Extra>\r\n          <Label icon='pencil alternate icon' content={`Автор: ${authorName}`} />\r\n          <Label icon='clock outline icon' content={`Дата статті: ${time}`} />\r\n        </Item.Extra>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default Post;","import React, { Component } from 'react';\nimport Post from './components/Post';\nimport Stat from './components/Korona';\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { Container, Header, Button, Label, Item, Table } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport './styles/index.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  // fetchPostsHromadske() {\n  //   const { setPosts } = this.props;\n  //   setPosts([]);\n  //   setPosts(data); \n  // }\n\n  fetchPostsHromadske() {\n    const { setPosts } = this.props;\n    setPosts([]);\n    const isActiveClass = \"ui active button\"\n    const nonActiveClass = \"ui disabled button\"\n    axios.get('/ukr')\n      .then(({data}) => {\n        setPosts(data)\n        console.log('Data has been received!!');\n      })\n      .catch(() => {\n        console.log('Error retrieving data!!!');\n      });\n    // axios\n    //   .get('https://60343d97843b1500179324f4.mockapi.io/postsUnian')\n    //   .then(({ data }) => {\n    //     setPosts(data);\n    //   });\n  }\n\n  fetchPostsUnian() {\n    const { setPosts } = this.props;\n    setPosts([]);\n    axios.get('/it')\n      .then(({data}) => {\n        setPosts(data)\n        console.log('Data has been received!!');\n      })\n      .catch(() => {\n        console.log('Error retrieving data!!!');\n      });\n  }\n\n  fetchPostsKoresp() {\n    const { setPosts } = this.props;\n    setPosts([]);\n    axios.get('/world')\n      .then(({data}) => {\n        setPosts(data)\n        console.log('Data has been received!!');\n      })\n      .catch(() => {\n        console.log('Error retrieving data!!!');\n      });\n  }\n\n  fetchPostsKorona() {\n    const { setPosts } = this.props;\n    setPosts([]);\n    axios.get('/korona')\n      .then(({data}) => {\n        setPosts(data)\n        console.log('Korona data has been received!!');\n      })\n      .catch(() => {\n        console.log('Error retrieving data!!!');\n      });\n  \n      \n    \n    // setPosts();\n    // axios.get('/moz')\n    //   .then(({data}) => {\n    //     setPosts(data)\n    //     console.log('Moz data has been received!!');\n    //     console.log(data);\n    //   })\n    //   .catch(() => {\n    //     console.log('Error retrieving data!!!');\n    //   });\n  }\n\n  fetchPostsExpert() {\n    const { setPosts } = this.props;\n    setPosts([]);\n    axios.get('/expert')\n      .then(({data}) => {\n        setPosts(data)\n        console.log('Expert data has been received!!');\n      })\n      .catch(() => {\n        console.log('Error retrieving data!!!');\n      });\n  }\n\n\n\n  UNSAFE_componentWillMount() {\n      this.fetchPostsHromadske()\n      this.props.genre.genre = 'UKR'\n  }\n\n  genreText(s) {\n    switch (s) {\n      case 'IT':\n        return 'IT та наука'\n      case 'UKR':\n        return 'Україна'\n      case 'COR':\n        return 'Коронавірус'\n      case 'WORLD':\n        return 'Новини світу'\n      case 'EXP':\n        return 'Експертна думка'\n    }\n  }\n\n  render() {\n    const { posts } = this.props\n    const { items } = posts\n    \n    if (this.props.genre.genre === 'UKR') {\n    return (\n      <Container>\n       <div class=\"main\"></div>\n          <div class=\"footer\">\n          <h1 class=\"h1\" >The BellMan</h1>\n          </div>\n          <div class=\"ui inverted segment\"><h3 className=\"secondHeader\">{ this.genreText(this.props.genre.genre) }</h3> </div>\n          \n          <div>\n          <div class=\"ui compact menu\">\n          <div class=\"ui simple dropdown item\">\n    Розділ\n    <i class=\"dropdown icon\"></i>\n    <div class=\"menu\">\n      <div class=\"item\" onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</div>\n    </div>\n  </div>\n</div>\n        {/* <Button.Group basic className='ui vertical buttons'>\n            <Button class='ui button' onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</Button>\n        </Button.Group> */}\n        </div>\n        <Item.Group divided>\n        { ( items.map(({ url, title, description, preDescription, authorName, image, time, readNext }, key) => (\n            <Post\n            key={key}\n            readNext={readNext}\n            time={time}\n            url={url}\n            title={title}\n            preDescription={`${preDescription.substring(0, 540)}`}\n            description={`${description.substring(0, 540)}`}\n            authorName={authorName}\n            image={image}\n            /> )\n          ))\n        }\n        </Item.Group>\n        {/* <div class=\"main\"></div>\n          <div class=\"footer\">\n          The BellMan 2021\n          </div> */}\n      </Container>\n    )} else if (this.props.genre.genre === 'IT') {\n      return (\n        <Container>\n          <div class=\"main\"></div>\n          <div class=\"footer\">\n          <h1 class=\"h1\" >The BellMan</h1>\n          </div>\n          \n          <div className=\"ui inverted segment\"><h3 className=\"secondHeader\">{ this.genreText(this.props.genre.genre) }</h3> </div>\n          <div>\n          <div class=\"ui compact menu\">\n          <div class=\"ui simple dropdown item\">\n    Розділ\n    <i class=\"dropdown icon\"></i>\n    <div class=\"menu\">\n      <div class=\"item\" onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</div>\n    </div>\n  </div>\n</div>\n          {/* <Button.Group basic className='ui vertical buttons'>\n            <Button class='ui button' onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</Button>\n            </Button.Group> */}\n          </div>\n          <Item.Group divided>\n          { ( items.map(({ url, title, description, preDescription, authorName, image, time, readNext }, key) => (\n              <Post\n                key={key}\n                time={time}\n                readNext={readNext}\n                url={url}\n                title={title}\n                preDescription={`${preDescription.substring(0, 540)}`}\n                description={`${description.substring(0, 540)}`}\n                authorName={authorName}\n                image={image}\n              /> )\n            ))\n          }\n          </Item.Group>\n          {/* <div class=\"main\"></div>\n          <div class=\"footer\">\n          The BellMan 2021\n          </div> */}\n        </Container>\n    )} else if (this.props.genre.genre === 'WORLD') {\n      return (\n        <Container>\n          <div class=\"main\"></div>\n          <div class=\"footer\">\n          <h1 class=\"h1\" >The BellMan</h1>\n          </div>\n          \n          <div className=\"ui inverted segment\"><h3 className=\"secondHeader\">{ this.genreText(this.props.genre.genre) }</h3> </div>\n          <div>\n          <div class=\"ui compact menu\">\n          <div class=\"ui simple dropdown item\">\n    Розділ\n    <i class=\"dropdown icon\"></i>\n    <div class=\"menu\">\n      <div class=\"item\" onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</div>\n    </div>\n  </div>\n</div>\n          {/* <Button.Group basic className='ui vertical buttons'>\n            <Button class='ui button' onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</Button>\n            </Button.Group> */}\n          </div>\n          <Item.Group divided>\n          { ( items.map(({ url, title, description, preDescription, authorName, image, time, readNext }, key) => (\n              <Post\n                key={key}\n                time={time}\n                readNext={readNext}\n                url={url}\n                title={title}\n                preDescription={`${preDescription.substring(0, 540)}`}\n                description={`${description.substring(0, 540)}`}\n                authorName={authorName}\n                image={image}\n              /> )\n            ))\n          }\n          </Item.Group>\n          {/* <div class=\"main\"></div>\n          <div class=\"footer\">\n          The BellMan 2021\n          </div> */}\n        </Container>\n      )\n    } else if (this.props.genre.genre === 'COR') {\n      return (\n        <Container>\n          <div class=\"main\"></div>\n          <div class=\"footer\">\n          <h1 class=\"h1\" >The BellMan</h1>\n          </div>\n          \n          <div className=\"ui inverted segment\"><h3 className=\"secondHeader\">{ this.genreText(this.props.genre.genre) }</h3> </div>\n          <div>\n          <div class=\"ui compact menu\">\n          <div class=\"ui simple dropdown item\">\n    Розділ\n    <i class=\"dropdown icon\"></i>\n    <div class=\"menu\">\n      <div class=\"item\" onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</div>\n    </div>\n  </div>\n</div>\n          {/* <Button.Group basic className='ui vertical buttons'>\n          <Button class='ui button' onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</Button>\n            </Button.Group> */}\n          </div>\n          \n          <Item.Group divided>\n          { ( items.map(({ url, title, description, preDescription, authorName, image, time, readNext }, key) => (\n              <Post\n              key={key}\n              time={time}\n              readNext={readNext}\n              url={url}\n              title={title}\n              preDescription={`${preDescription.substring(0, 540)}`}\n              description={`${description.substring(0, 540)}`}\n              authorName={authorName}\n              image={image}\n              /> )\n            ))\n          }\n          </Item.Group>\n          {/* <div class=\"main\"></div>\n          <div class=\"footer\">\n          The BellMan 2021\n          </div> */}\n        </Container>\n      ) \n    } else if (this.props.genre.genre === 'EXP') {\n      return (\n        <Container>\n          <div class=\"main\"></div>\n          <div class=\"footer\">\n          <h1 class=\"h1\" >The BellMan</h1>\n          </div>\n          \n          <div className=\"ui inverted segment\"><h3 className=\"secondHeader\">{ this.genreText(this.props.genre.genre) }</h3> </div>\n          <div>\n            \n          <div class=\"ui compact menu\">\n          <div class=\"ui simple dropdown item\">\n    Розділ\n    <i class=\"dropdown icon\"></i>\n    <div class=\"menu\">\n      <div class=\"item\" onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</div>\n      <div class=\"item\" onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</div>\n    </div>\n  </div>\n</div>\n          {/* <Button.Group basic className='ui vertical buttons'>\n            <Button class='ui button' onClick={() => this.props.changeGenre('UKR') && this.fetchPostsHromadske() }>Україна</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('IT') && this.fetchPostsUnian() }>ІТ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('WORLD') && this.fetchPostsKoresp() }>Світ</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('COR') && this.fetchPostsKorona() }>Коронавірус</Button>\n            <Button class='ui button' onClick={() => this.props.changeGenre('EXP') && this.fetchPostsExpert()}>Експертна думка</Button>\n            </Button.Group> */}\n          </div>\n          \n          <Item.Group divided>\n          {( items.map(({ url, title, description, preDescription, authorName, image, time, readNext }, key) => (\n              <Post\n              key={key}\n              time={time}\n              readNext={readNext}\n              url={url}\n              title={title}\n              preDescription={`${preDescription.substring(0, 540)}`}\n              description={`${description.substring(0, 540)}`}\n              authorName={authorName}\n              image={image}\n              /> )\n            ))\n          }\n          </Item.Group>\n          {/* <div class=\"main\"></div>\n          <div class=\"footer\">\n          The BellMan 2021\n          </div> */}\n        </Container>\n      ) \n    } \n  }\n}\n\nconst state = props => {\n  return {\n    loading: true,\n    ...props,\n  }\n}\n\nconst actions = dispatch => ({\n  setPosts: data =>\n  dispatch({\n    type: 'SET_POSTS',\n    payload: data\n  }),\n  setStat: statData =>\n  dispatch({\n    type: 'SET_STAT',\n    payload: statData\n  }),\n  changeGenre: type =>\n  dispatch({\n    type: 'CHANGE_GENRE',\n    payload: type\n  })\n})\n\nexport default connect(state, actions)(App)","const initialState = {\r\n    items: []\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n            case 'REMOVE':\r\n            return {\r\n                ...state,\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n    \r\n}","const initialState = {\r\n  genre: 'IT',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE_GENRE':\r\n      return {\r\n        ...state,\r\n        genre: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport posts from './posts'\r\nimport genre from './genres'\r\n\r\nconst rootReducers = combineReducers({\r\n    posts,\r\n    genre\r\n})\r\n\r\nexport default rootReducers","import { applyMiddleware, createStore } from 'redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducers from './reducers/index'\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(logger))\r\n\r\nexport default store","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './store'\r\n\r\nimport './styles/index.css';\r\nimport './styles/semantic.min.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));"],"sourceRoot":""}